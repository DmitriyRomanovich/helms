apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bankapi.fullname" . }}
  labels:
    {{- include "bankapi.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "bankapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bankapi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bankapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - configMap:
          name: ui-config-bankapi
        name: config-volume
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
          - mountPath: /app/bank-check/build/configs/config.js
            name: config-volume
            subPath: config.js
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
            - name: "ASPNETCORE_FORWARDEDHEADERS_ENABLED"
              value: "true"
            - name: "ForwardedForHeaderName__Value"
              value: "{{ .Values.forwardedForHeaderNameValue }}"
            - name: "ConnectionStrings__glowDb"
              value: "Server={{ .Values.dbHost }}; Port=5432; Database={{ .Values.dbDatabaseApi }}; Userid={{ .Values.dbUser }}; SSL Mode=Require;Trust Server Certificate=true;Pooling=true;Password={{ .Values.dbPassword }}"
            - name: ConnectionStrings__historyDb
              value: "Server={{ .Values.dbHost }}; Port=5432; Database={{ .Values.dbDatabaseHistory }}; Userid={{ .Values.dbUser }}; SSL Mode=Require;Trust Server Certificate=true;Pooling=true;Password={{ .Values.dbPassword }}"
            - name: GoCardlessOptions__AccessToken
              value: {{ .Values.gocardlessApiKey | quote }}
            - name: GoCardlessOptions__DefaultCountryCode
              value: "{{ .Values.goCardlessOptionsDefaultCountryCode }}"
            - name: GoCardlessOptions__UseSandBox
              value: "{{ .Values.goCardlessOptionsUseSandBox }}"
            - name: GoCardlessOptions__UseMocked
              value: "{{ .Values.goCardlessOptionsUseMocked }}"
          #livenessProbe:
           # httpGet:
            #  path: /
             # port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
